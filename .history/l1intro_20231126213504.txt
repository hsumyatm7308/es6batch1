Javascript / ECMASCRIPT / ES2015 / ES 2016 / Modern Javascript 


1995 

=> ECMA 
Ecam International (European Computer Manufacturers Association )


1997 - ES1
1998 - ES2
1999 - ES3
2009 - ES5 
2015 - ES6 ( CORE PROGRAMMING LANGUAGE )
2016 - ES7 
2017 - ES8 
2018 - ES9 
2019 - ES10 


ecma international.org   - javascript official website 

=>ES6 ( Variables are declared let & const )
var 
   - Global and Function Scope 
   - Value can change 
   - var shouldn't be used in ES6 

let 
   - Block Scope 
   - Value can change 

const 
   - Blocak Scope 
   - Value can't change 

------------------------------------------ 

=>Exercise 
   
    var x = 100; 
       x = 200;

    var x = 300;
    console.log(x);

    let y = 100; 
        y = 200;
    let y = 300; 
    console.log(y); // Uncaught SyntaxError: Identifier 'y' has already been declared 

    const p = 100; 
    console.log(p)

    if(true){
        //Global & Function Scopes 
        var num1 = 100; 

        //Block Scopte 
        let num2 = 200; 

        const num3 = 300;
    }

    console.log(num1);
    console.log(num2); 
    console.log(num3);


function printone(){
    for(var y=0 ; y < 5 ; y++){
        console.log(y);
    }
}

printone();

function printtow(){
    for(let q = 0; q < 5; q++){
        console.log(q);
    }

    console.log("q value is = " .q);
}

printtow();

function printthree(){
    for(const b = 0; b < 5; b++){
        console.log(b);
    }

    console.log("b value is = " .b);
}

printthree();  // 0 Uncaught Typerror: assigment to constant variable 



const arrcolors = ["red","green","blue"];
console.log(arrcolors); 
arrcolors.push("black","white","grey")
console.log(arrcolors);


const person = {
    name: "Aung Aung",
    bio:function(){
        console.log("this is bio")
    }
}

console.log(person);
console.log(person.name) //Dot Notation for Object Properties 
console.log(person['name']); // Bracket Notaiton for Object Properties  // just for key name. not for funciton 
console.log(person.bio())
